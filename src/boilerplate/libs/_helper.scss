.h {
    @include breakpoint("sm and up") {
        &-float {
            float: left;

            &-right {
                float: right;
            }
        }

        &-clear {
            clear: both;

            &-left {
                clear: left;
            }

            &-right {
                clear: right;
            }
        }
    }

    &-inline-block {
        display: inline-block;
    }

    &-block {
        display: block;
    }

    &-reset {
        @include reset;
    }

    &-text {
        &-center {
            text-align: center;
        }

        &-left {
            text-align: left;
        }

        &-right {
            text-align: right;
        }

        &-justify {
            text-align: justify;
        }
    }
}

@include breakpoint("sm and up") {
    figure.h-float-right,
    img.h-float-right {
        float: right;
        margin: 0 0 0 $grid-spacing;
    }
}


@include breakpoint("sm and up") {
    figure.h-float-left,
    img.h-float-left {
        float: left;
        margin: 0 $grid-spacing 0 0;
    }
}

// ------------------------------------------------------------- Hide Helper ---

.h-xs-hidden {
    @include breakpoint("xs") {
        display: none;
    }
}

.h-sm-hidden {
    @include breakpoint("sm") {
        display: none;
    }
}

.h-sm-and-up-hidden {
    @include breakpoint("sm and up") {
        display: none;
    }
}

.h-md-hidden {
    @include breakpoint("md") {
        display: none;
    }
}

.h-md-and-up-hidden {
    @include breakpoint("md and up") {
        display: none;
    }
}

.h-lg-hidden {
    @include breakpoint("lg") {
        display: none;
    }
}

.h-xl-hidden {
    @include breakpoint("xl") {
        display: none;
    }
}

.h-xxl-hidden {
    @include breakpoint("xxl") {
        display: none;
    }
}

// ---------------------------------------------------- Pure-CSS add Padding ---

.pure-g.pure-padded-children {
    margin: {
        left: -$grid-spacing;
        right: -$grid-spacing;
    };

    > [class*="pure-u"] {
        padding: {
            left: $grid-spacing;
            right: $grid-spacing;
        };
    }

    &-halved {
        margin: {
            left: -$grid-spacing / 2;
            right: -$grid-spacing / 2;
        };

        > [class*="pure-u"] {
            padding: {
                left: $grid-spacing / 2;
                right: $grid-spacing / 2;
            };
        }
    }
}

// ----------------------------------------------- Preservable Aspect Ratios ---

@mixin aspect-ratio($width, $height) {
    position: relative;

    &:before {
        display: block;
        content: "";
        width: 100%;
        padding-top: ($height / $width) * 100%;
    }

    > * {
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
    }
}

.h-aspect-ratio {

    &-16-9 {
        @include aspect-ratio(19,9);
    }

    &-16-10 {
        @include aspect-ratio(19,10);
    }

    &-4-3 {
        @include aspect-ratio(4,3);
    }
}
